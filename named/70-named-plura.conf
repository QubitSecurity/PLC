## /etc/logstash/conf.d/70-named-plura.conf

### 70-named-plura
### For named query log

input {
   file {
     path           => "/var/log/plura/named-10.100.20.180.log"  # Path to the log file
     start_position => "beginning"                               # Start reading the log file from the beginning
     sincedb_path   => "/etc/logstash/NUL_named-180"             # Path to the sincedb file to track the reading position
   }
}

input {
   file {
     path           => "/var/log/plura/named-10.100.20.181.log"
     start_position => "beginning"
     sincedb_path   => "/etc/logstash/NUL_named-181"
   }
}

input {
   file {
     path           => "/var/log/plura/named-10.100.20.182.log"
     start_position => "beginning"
     sincedb_path   => "/etc/logstash/NUL_named-182"
   }
}

filter {

  grok {
    patterns_dir => ["/etc/logstash/patterns.d/grok-named"]  # Path to the grok pattern file
    match => { "message" => "%{PLURANAMED}" }                # Match the message field with the PLURANAMED pattern
  }

  mutate{
    rename       => {"timestamp" => "DATE" }                 # Rename the timestamp field to DATE

    rename       => {"clientip" => "IP"}                     # Rename the clientip field to IP
    rename       => {"clientname" => "HOST"}                 # Rename the clientname field to HOST

    add_field    => {"QUERY" => "%{HOST} IN %{TYPE} %{FLAGS}"}  # Create a QUERY field with the specified format
    add_field    => {"resourceId" => "named"}                # Add a resourceId field with the value "named"

    remove_field => ["@timestamp","@version","path","clientport","name","class","host","message"]  # Remove unnecessary fields
  }
}

output {
        stdout { codec => rubydebug }  # Output to stdout for debugging
        file { 
                codec => "json_lines"   # Output logs in JSON format
                path  => ["/var/log/plura/app-logstash-named.log"]  # Path to save the log output
        }
}
